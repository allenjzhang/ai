name: "LLM Code Review"
description: "Automated code review using an LLM (TypeScript). Analyzes changed files in PRs and posts a summary as a comment."
inputs:
  github_token:
    description: "GitHub token"
    required: true
  openai_api_key:
    description: "OpenAI API key for LLM access."
    required: true
  comment_on_pr:
    description: "Whether to post the review as a PR comment."
    required: false
    default: 'true'
runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm ci
      shell: bash
      working-directory: ${{ github.action_path }}

    - name: Build TypeScript
      run: npm run build
      shell: bash
      working-directory: ${{ github.action_path }}

    - name: Run LLM code review
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
        OPENAI_API_KEY: ${{ inputs.openai_api_key }}
      run: node dist/review.js
      shell: bash
      working-directory: ${{ github.action_path }}

    - name: Post review as PR comment
      if: ${{ inputs.comment_on_pr == 'true' && github.event_name == 'pull_request' }}
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          const fs = require('fs');
          const body = fs.readFileSync('review.md', 'utf8');
          if (!body) return;
          const pr = context.payload.pull_request;
          if (pr) {
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number: pr.number,
              body
            });
          } else {
            core.setOutput('review', body);
          }
